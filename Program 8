import threading
import random
import time

shared_number = None


lock = threading.Lock()

def generate_random_number():
    global shared_number
    while True:
        with lock:
            shared_number = random.randint(1, 100)
        time.sleep(1)

def compute_square():
    while True:
        with lock:
            if shared_number is not None and shared_number % 2 == 0:
                print(f"Square of {shared_number}: {shared_number ** 2}")
        time.sleep(1)

def print_cube():
    while True:
        with lock:
            if shared_number is not None and shared_number % 2 != 0:
                print(f"Cube of {shared_number}: {shared_number ** 3}")
        time.sleep(1)


thread1 = threading.Thread(target=generate_random_number)
thread2 = threading.Thread(target=compute_square)
thread3 = threading.Thread(target=print_cube)


thread1.start()
thread2.start()
thread3.start()


thread1.join()
thread2.join()
thread3.join()
